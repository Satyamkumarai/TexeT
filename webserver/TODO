Problems to Tackle:
    * Getting it scan multiple files from the camera. : check out: https://web.dev/read-files/
    * Uploading all of them to the server.
    * Converting those images to pdfs after running document recognition on it. 
    ** Storage of the pdf?  
        - Volumes ? shared ? Use This ? :https://softwareengineering.stackexchange.com/questions/233959/design-of-high-performance-file-processing-web-application#
    * Creating the API Server for Processing of the uploaded/created pdf 
    * Retriving the pdf once it's Processed 
    * User indications of the processing ?!..
    https://stackoverflow.com/questions/64650119/react-error-sharedarraybuffer-is-not-defined-in-firefox
    Future Enhancements..
    * HTTPS ? 
    * NGINX LoadBalancer ?




URL Resources:
    Opencv js : https://github.com/meschbach/xp-opencvjs-document-scanner
    Kick-ass-webScanner : https://github.com/heymind/webScanner
    Wow-Man-This-Guy-GOAT : https://github.com/riju/WebCamera
    Cheeck out ! : <a href="https://developers.google.com/web/fundamentals/media/capturing-images">This </a>

** : Most Urgent To figure out !
* A Bit easier 

    

PDF processing :
    Just use ocrmypdf from pypy
Website :
    1. Initialize the website ( the flask project)
        a. Make the routing work. 
        b. Load a simple html template.
    2. Accept input pdf files from the website..
        a. Front end part.
        b. Hook up the backend part.
    3. Scan via camera.  
        a. Add the ability to scan it via camera on the frontend part
        b. hook is to the backend (so that the captured image goes to the backend)
    4. Pdf processing.
        a. create an application that takes in a pdf
        b. extracts images from the pdf
        c. runs ocr on the images
        d. writes the extracted text to another file.

Remember To :
    * remove .env .flaskenv files

Plan : 
    * A flask App just for the scanning and uploading the files in a docker container
    * Another Docker container that hosts another flask server that can process the pdf file and send it back
    
